from functions import*
#import ascii
blocs_liste = [
    # blocs communs à tous les plateaux
    [[1, 0, 0, 0, 0],
     [1, 1, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[0, 1, 0, 0, 0],
     [1, 1, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 0, 0, 0, 0],
     [1, 1, 1, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 1, 0, 0, 0],
     [0, 1, 0, 0, 0],
     [0, 1, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 0, 0, 0, 0],
     [1, 1, 0, 0, 0],
     [1, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[0, 1, 0, 0, 0],
     [1, 1, 1, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 1, 0, 0, 0],
     [0, 1, 1, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 0, 0, 0, 0],
     [1, 1, 0, 0, 0],
     [0, 1, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 0, 0, 0, 0],
     [1, 0, 0, 0, 0],
     [1, 0, 0, 0, 0],
     [1, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 1, 0, 0, 0],
     [1, 1, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 1, 0, 0, 0],
     [0, 1, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 1, 0, 0, 0],
     [1, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[0, 0, 1, 0, 0],
     [1, 1, 1, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 1, 0, 0, 0],
     [1, 0, 0, 0, 0],
     [1, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[0, 1, 0, 0, 0],
     [1, 1, 0, 0, 0],
     [0, 1, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 1, 1, 0, 0],
     [0, 1, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[0, 1, 1, 0, 0],
     [1, 1, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[0, 0, 1, 0, 0],
     [0, 1, 1, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [1, 0, 0, 0, 0]],

    [[1, 1, 1, 1, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    # blocs pour le cercle
    [[1, 1, 1, 1, 0],
     [1, 1, 1, 1, 0],
     [1, 1, 1, 1, 0],
     [1, 1, 1, 1, 0],
     [0, 0, 0, 0, 0]],

    [[1, 1, 1, 1, 0],
     [1, 1, 1, 1, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[0, 1, 1, 0, 0],
     [1, 1, 1, 1, 0],
     [1, 1, 1, 1, 0],
     [0, 1, 1, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 0, 0, 1, 0],
     [1, 0, 0, 1, 0],
     [1, 0, 0, 1, 0],
     [1, 1, 1, 1, 0],
     [0, 0, 0, 0, 0]],

    [[1, 1, 1, 1, 0],
     [0, 0, 0, 1 ,0],
     [0, 0, 0, 1, 0],
     [0, 0, 0, 1, 0],
     [0, 0, 0, 0, 0]],

    [[1, 0, 0, 0, 0],
     [1, 0, 0, 0, 0],
     [1, 0, 0, 0, 0],
     [1, 0, 0, 0, 0],
     [1, 0, 0, 0, 0]],

    [[1, 1, 1, 1, 1],
     [1, 0, 0, 0, 1],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 1, 1, 1, 1],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 0, 0, 0, 0],
     [1, 0, 0, 0, 0],
     [1, 0, 0, 1, 0],
     [1, 1, 1, 1, 0],
     [0, 0, 0, 0, 0]],

    [[1, 1, 1, 1, 0],
     [1, 1, 1, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 1, 1, 0, 0],
     [0, 0, 1, 0, 0],
     [0, 0, 1, 0, 0],
     [1, 1, 1, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 1, 0, 0, 0],
     [1, 1, 0, 0, 0],
     [1, 1, 0, 0, 0],
     [1, 1, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    # pour le losange
    [[0, 0, 0, 1, 1],
     [0, 0, 1, 1, 0],
     [0, 1, 1, 0, 0],
     [1, 1, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 1, 0, 0, 0],
     [0, 1, 1, 0, 0],
     [0, 0, 1, 1, 0],
     [0, 0, 0, 1, 1],
     [0, 0, 0, 0, 0]],

    [[0, 0, 0, 1, 1],
     [0, 0, 1, 1, 0],
     [0, 1, 1, 0, 0],
     [1, 1, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 1, 1, 1, 0],
     [0, 1, 1, 0, 0],
     [0, 1, 1, 0, 0],
     [0, 1, 1, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 0, 0, 1, 0],
     [0, 1, 1, 0, 0],
     [0, 1, 1, 0, 0],
     [1, 0, 0, 1, 0],
     [0, 0, 0, 0, 0]],

    [[1, 1, 1, 1, 1],
     [0, 1, 1, 1, 0],
     [0, 0, 1, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 1, 1, 1, 0],
     [1, 1, 1, 1, 0],
     [1, 1, 1, 1, 0],
     [1, 1, 1, 1, 0],
     [0, 0, 0, 0, 0]],

    [[1, 0, 0, 0, 0],
     [1, 0, 0, 0, 0],
     [1, 0, 0, 0, 0],
     [1, 0, 0, 0, 0],
     [1, 0, 0, 0, 0]],

    [[1, 1, 1, 1, 1],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[0, 0, 0, 1, 0],
     [1, 1, 1, 1, 0],
     [0, 0, 0, 1, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 1, 1, 1, 0],
     [0, 0, 0, 1, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 1, 0, 0, 0],
     [0, 1, 0, 0, 0],
     [0, 1, 0, 0, 0],
     [0, 1, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 0, 0, 0, 0],
     [1, 0, 0, 0, 0],
     [1, 0, 0, 0, 0],
     [1, 1, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    # pour le triangle

    [[1, 0, 0, 0, 0],
     [1, 1, 1, 0, 0],
     [0, 0, 1, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 1, 0, 0, 0],
     [0, 1, 1, 0, 0],
     [0, 1, 1, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[0, 1, 1, 0, 0],
     [1, 1, 1, 0, 0],
     [1, 1, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[0, 0, 1, 0, 0],
     [0, 1, 0, 0, 0],
     [1, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 0, 0, 0, 0],
     [0, 1, 0, 0, 0],
     [0, 0, 1, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 0, 0, 0, 0],
     [1, 0, 0, 0, 0],
     [1, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 1, 1, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 0, 0, 0, 0],
     [1, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[0, 1, 0, 0, 0],
     [1, 1, 1, 0, 0],
     [0, 1, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],

    [[1, 1, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0]],
]

losange_liste = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 32, 33, 34, 35, 36, 37, 38, 39, 40,
                 41, 42, 43, 44, 45]
cercle_liste = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
                29, 30, 31]
triangle_liste = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 46, 47, 48, 49, 50, 51, 52, 53, 54,
                  55, 56]
N = 0
Score = 0
print("EFREI PARIS                                                                            L1 PROMO 2027\n");
print("projet Python                      ....................................                  Begum Sozer\n");
print("                                   .      COMME UN AIR DE TETRIS       .                    Rhita Moummade\n");
print("                                   ....................................                                  \n\n\n");

print("                                         - BIENVENUE -\n\n\n")

print("                    1 - Regles du jeu                     2 - Commencer a jouer                    "
      "")

# on dit "c" pour commencer
c = int(input("Entrez 1 pour connaitre les regles du jeu, 2 pour commencer a jouer ! : "))
while c == 1:
    print("\nRegles du jeu : Le jeu presente 3 plateaux contenant   chacun un ensemble de blocs specifiques,\n")
    print("le joueur devra placer les blocs tour a tour sur la   surface du plateau en saississant les\n")
    print("coordonees de l'endroit ou il veut les inserer. Le but est d'avoir un plateau non plein le\n")
    print("plus longtemps possible. Il faut donc placer chaque bloc a l'emplacement qui permet d'eliminer\n")
    print("un maximum de lignes et/ou de colonnes.\n")
    print("Le joueur dispose de 3 tentatives pour saisir des coordonnees valides. Apres 3 tentatives invalides,\n")
    print("c'est GAME OVER !\n")
    print("Les coordonnees sont valides si les cases du bloc choisi peuvent etre toutes placees sur les cases\n")
    print("vides se trouvant sur la surface valide du jeu\n")
    print("\n")
    c = int(input("Entrez 1 pour connaitre les regles du jeu, 2 pour commencer a jouer ! : "))

if (c == 2):
    # l'utilisateur doit saisir
    # 1 pour cercle; 2 pour losange et 3 pour triangle

    print("................................................................................      ")

print("                         CHOIX DU PLATEAU                              ")

print(" ................................................................................          ")

print("                       1 - Losange         2 - Cercle          3 - Triangle")

c_plateau = int(input("Saisir le numero correspondant a la forme voulu :1 pour losange;2 pour cercle;3 pour triangle:"))
if c_plateau == 1:
    grid = read_grid("losange.txt")
    print_grid(grid)
elif c_plateau == 2:
    grid = read_grid("cercle.txt")
    print_grid(grid)

else:
    grid = read_grid("triangle.txt")
    print_grid(grid)
# print_blocs_c=int(input("Entrez 1 pour afficher tous les blocs, 2 pour seulement 3 blocs aleatoirement :"))

print("          ................................................................................          \n")
print("                           CHOIX DE LA POLITIQUE DE SUGGESTION DES BLOCS                            \n")
print("          ................................................................................          \n")

print(
    "         1 - Afficher à chaque tour de jeu l’ensemble des blocs disponibles\n         2 - Afficher uniquement 3 blocs sélectionnés aléatoirement\n\n\n")
num = 0
while (num < 1) or (num > 2):
    num = int(input("Saisir le numero correspondant à la politique de jeu souhaitée : "))
